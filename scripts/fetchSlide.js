// generated by ChatGPT
const axios = require('axios')
const cheerio = require('cheerio')
const fs = require('fs')
const path = require('path')

const BASE_URL = 'https://speakerdeck.com/sota1235?page='
const MAX_PAGE = 2

function formatDate(date) {
  const tzOffset = date.getTimezoneOffset() * 60000 // タイムゾーンオフセット
  return new Date(date - tzOffset).toISOString().split('.')[0] + 'Z'
}

// スライド詳細を取得する関数
async function fetchSlideDetails(slideLink) {
  try {
    const { data } = await axios.get(slideLink)
    const $ = cheerio.load(data)

    const title = $('title')
      .text()
      .trim()
      .replace(' - Speaker Deck', '')
      .replace('#', '')
      .replace('?', '')
    const ogpImageUrl = $('meta[property="og:image"]').attr('content')
    const datePublished =
      new Date($('.deck-date').text().trim()) || formatDate(new Date())

    return {
      kind: 'slide',
      mediaTitle: 'Slide',
      title,
      date: datePublished,
      link: slideLink,
      ogpImageUrl,
    }
  } catch (error) {
    console.error(`Error fetching slide details for ${slideLink}:`, error)
    return null
  }
}

// メイン関数
async function fetchSlides() {
  for (let page = 1; page <= MAX_PAGE; page++) {
    try {
      const { data } = await axios.get(`${BASE_URL}${page}`)
      const $ = cheerio.load(data)
      const slides = $('.card.deck-preview')

      for (const slide of slides) {
        const slideLink =
          'https://speakerdeck.com' + $(slide).find('a').attr('href')
        console.log(`fetch ${slideLink}`)

        // 各スライドの詳細情報を取得
        const slideData = await fetchSlideDetails(slideLink)
        if (slideData) {
          // JSONファイルに書き出し
          const filename = path.join(
            __dirname,
            '../src/content/slides',
            `${slideData.title.replace(/\s+/g, '_').replace('/', '-')}.json`
          )
          if (!fs.existsSync(path.dirname(filename))) {
            fs.writeFileSync(filename, JSON.stringify(slideData, null, 2))
          }
          console.log(`Saved: ${filename}`)
        }
      }
    } catch (error) {
      console.error(`Error fetching page ${page}:`, error)
    }
  }
}

// 実行
fetchSlides()
